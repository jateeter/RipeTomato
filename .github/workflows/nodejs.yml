# Node.js CI/CD for RipeTomato Shelter Management System

name: Node.js CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint || echo "Linting completed with warnings"

      - name: Run tests
        run: npm test -- --watchAll=false --coverage

      - name: Build application
        run: CI=false npm run build

      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        if: matrix.node-version == '20.x'
        with:
          name: coverage-report
          path: coverage/

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: CI=false npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: build/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: build/

      - name: Deploy to staging
        run: |
          echo "Deploy to staging environment"
          # Add deployment commands here

  external-agent-access:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate API documentation
        run: |
          echo "# RipeTomato API Documentation" > API.md
          echo "Generated at: $(date)" >> API.md
          echo "" >> API.md
          echo "## Available Endpoints" >> API.md
          echo "- /api/health - Health check" >> API.md
          echo "- /api/clients - Client management" >> API.md
          echo "- /api/beds - Bed management" >> API.md
          echo "- /api/reservations - Reservation management" >> API.md

      - name: Create external access configuration
        run: |
          mkdir -p .external-access
          cat > .external-access/config.json << EOF
          {
            "version": "1.0.0",
            "lastUpdated": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "build": {
              "status": "success",
              "artifacts": ["build/"],
              "commands": {
                "install": "npm ci",
                "build": "CI=false npm run build",
                "test": "npm test -- --watchAll=false",
                "start": "npm start"
              }
            },
            "endpoints": {
              "health": "/api/health",
              "build-status": "/api/build/status",
              "deploy": "/api/deploy"
            },
            "agent-capabilities": {
              "auto-build": true,
              "auto-test": true,
              "auto-deploy": false,
              "api-access": true
            }
          }
          EOF

      - name: Upload external access config
        uses: actions/upload-artifact@v3
        with:
          name: external-access-config
          path: .external-access/
