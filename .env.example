# Google Calendar API Configuration
# Get these from https://console.developers.google.com/

# Your Google OAuth 2.0 Client ID
REACT_APP_GOOGLE_CLIENT_ID=your-google-client-id-here

# Your Google API Key
REACT_APP_GOOGLE_API_KEY=your-google-api-key-here

# Solid Pod Configuration for OpenCommons.net
# Copy this file to .env.local and configure your credentials

# Solid Pod Provider Configuration
REACT_APP_SOLID_PROVIDER=https://opencommons.net

# Application Credentials (register at https://opencommons.net/register)
REACT_APP_SOLID_CLIENT_ID=idaho-community-services
REACT_APP_SOLID_CLIENT_SECRET=your_client_secret_here

# User Credentials (obtain after registering)
REACT_APP_SOLID_ACCESS_TOKEN=your_access_token_here
REACT_APP_SOLID_REFRESH_TOKEN=your_refresh_token_here

# Pod Information
REACT_APP_SOLID_WEB_ID=https://your-username.opencommons.net/profile/card#me
REACT_APP_SOLID_POD_URL=https://your-username.opencommons.net/

# Application Metadata
REACT_APP_VERSION=1.0.0
REACT_APP_APP_NAME=Community Services - Idaho Events

# Development Settings
REACT_APP_DEBUG_SOLID=true
REACT_APP_SOLID_TIMEOUT=10000

# Instructions:
# Google Calendar:
# 1. Go to https://console.developers.google.com/
# 2. Create a new project or select existing one
# 3. Enable the Google Calendar API
# 4. Create credentials (OAuth 2.0 Client ID and API Key)
# 5. Add your domain to authorized origins (http://localhost:3000 for development)
# 
# Solid Pod (OpenCommons.net):
# 1. Go to https://opencommons.net/register
# 2. Create a user account and Pod
# 3. Register your application
# 4. Obtain client credentials and access tokens
# 5. Update the SOLID_WEB_ID and SOLID_POD_URL with your actual Pod information
# 
# 6. Copy this file to .env.local and fill in your actual credentials

# Epic FHIR Configuration
# Copy this file to .env and fill in your Epic FHIR credentials

# Epic Sandbox Environment (for development and testing)
EPIC_SANDBOX_CLIENT_ID=your_sandbox_client_id
EPIC_SANDBOX_CLIENT_SECRET=your_sandbox_client_secret
EPIC_SANDBOX_REDIRECT_URI=http://localhost:3000/epic/callback

# Epic Production Environment (for live patient data)
EPIC_PROD_BASE_URL=https://your-epic-instance.epic.com/interconnect-fhir-oauth
EPIC_PROD_CLIENT_ID=your_production_client_id
EPIC_PROD_CLIENT_SECRET=your_production_client_secret
EPIC_PROD_REDIRECT_URI=https://your-app.com/epic/callback

# Epic Development Environment (for local development)
EPIC_DEV_BASE_URL=https://fhir.epic.com/interconnect-fhir-oauth
EPIC_DEV_CLIENT_ID=your_dev_client_id
EPIC_DEV_CLIENT_SECRET=your_dev_client_secret
EPIC_DEV_REDIRECT_URI=http://localhost:3000/epic/callback

# Health Data Service Configuration
UNIFIED_HEALTH_DATA_RETENTION_DAYS=90
UNIFIED_HEALTH_SYNC_INTERVAL=60
UNIFIED_HEALTH_AUTO_SYNC=true

# Epic FHIR Instructions:
# 1. Register your application at https://fhir.epic.com/Sandbox
# 2. Obtain client credentials for sandbox testing
# 3. For production, work with your Epic implementation team
# 4. Configure appropriate scopes and redirect URIs
# 5. Update the environment variables with your actual credentials

# OpenAI ChatGPT API Configuration
# Get API key from https://platform.openai.com/api-keys
REACT_APP_OPENAI_API_KEY=your_openai_api_key_here

# ChatGPT Agent Configuration
REACT_APP_CHATGPT_MODEL=gpt-4-turbo
REACT_APP_CHATGPT_TEMPERATURE=0.7
REACT_APP_CHATGPT_MAX_TOKENS=1000

# OpenAI Instructions:
# 1. Create account at https://platform.openai.com
# 2. Generate API key from https://platform.openai.com/api-keys
# 3. Set usage limits and monitor costs
# 4. For production, use organization-level API keys
# 5. Enable ChatGPT agents for intelligent service recommendations